@tailwind base;
@tailwind components;
@tailwind utilities;

/* Mobile viewport and safe area support */
@supports (padding: max(0px)) {
  body {
    padding-left: env(safe-area-inset-left);
    padding-right: env(safe-area-inset-right);
  }
}

/* Camera interface specific mobile optimizations */
.camera-container {
  height: 100vh;
  height: 100dvh; /* Dynamic viewport height for mobile */
}

/* Mobile-specific adjustments for camera controls */
@media screen and (max-height: 667px) {
  .camera-controls {
    padding-top: 0.25rem;
    padding-bottom: 0.5rem;
  }
}

@media screen and (min-height: 668px) and (max-height: 843px) {
  .camera-controls {
    padding-top: 0.5rem;
    padding-bottom: 1rem;
  }
}

@media screen and (min-height: 844px) {
  .camera-controls {
    padding-top: 0.75rem;
    padding-bottom: max(1.5rem, env(safe-area-inset-bottom));
  }
}

/* iPhone 16 and similar tall devices */
@media screen and (min-height: 900px) {
  .camera-controls {
    padding-top: 1rem;
    padding-bottom: max(2rem, env(safe-area-inset-bottom));
  }
}

/* Touch optimization */
.touch-manipulation {
  touch-action: manipulation;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
}

/* Modern splash screen animations */
@keyframes float-random {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  33% { transform: translateY(-20px) rotate(120deg); }
  66% { transform: translateY(-10px) rotate(240deg); }
}

@keyframes spin-slow {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes spin-slow-reverse {
  from { transform: rotate(360deg); }
  to { transform: rotate(0deg); }
}

@keyframes pulse-slow {
  0%, 100% { opacity: 0.4; }
  50% { opacity: 0.8; }
}

@keyframes pulse-glow {
  0%, 100% { opacity: 0.6; transform: scale(1); }
  50% { opacity: 1; transform: scale(1.05); }
}

@keyframes shimmer-fast {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

.animate-float-random {
  animation: float-random 4s ease-in-out infinite;
}

.animate-spin-slow {
  animation: spin-slow 8s linear infinite;
}

.animate-spin-slow-reverse {
  animation: spin-slow-reverse 12s linear infinite;
}

.animate-pulse-slow {
  animation: pulse-slow 3s ease-in-out infinite;
}

.animate-pulse-glow {
  animation: pulse-glow 2s ease-in-out infinite;
}

.animate-shimmer-fast {
  animation: shimmer-fast 1.5s ease-in-out infinite;
}

:root {
  --background: hsl(0, 0%, 100%);
  --foreground: hsl(20, 14.3%, 4.1%);
  --muted: hsl(60, 4.8%, 95.9%);
  --muted-foreground: hsl(25, 5.3%, 44.7%);
  --popover: hsl(0, 0%, 100%);
  --popover-foreground: hsl(20, 14.3%, 4.1%);
  --card: hsl(0, 0%, 100%);
  --card-foreground: hsl(0, 0%, 10%);
  --border: hsl(20, 5.9%, 90%);
  --input: hsl(20, 5.9%, 90%);
  --primary: hsl(205, 35%, 54%);
  --primary-foreground: hsl(211, 100%, 99%);
  --secondary: hsl(122, 39%, 49%);
  --secondary-foreground: hsl(60, 9.1%, 97.8%);
  --accent: hsl(205, 35%, 54%);
  --accent-foreground: hsl(211, 100%, 99%);
  --destructive: hsl(0, 84.2%, 60.2%);
  --destructive-foreground: hsl(60, 9.1%, 97.8%);
  --ring: hsl(20, 14.3%, 4.1%);
  --radius: 0.5rem;
  --surface: #5E93B5;
  --on-surface: hsl(0, 0%, 100%);
  --error: hsl(0, 65%, 51%);
}

/* Splash screen animations */
@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animate-shimmer {
  animation: shimmer 2s ease-in-out infinite;
}

.bg-grid-pattern {
  background-image: 
    linear-gradient(rgba(0,0,0,0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0,0,0,0.1) 1px, transparent 1px);
  background-size: 20px 20px;
}

/* Custom Scrollbars */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.1);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb {
  background: hsl(0, 0%, 30%);
  border-radius: 4px;
  transition: background 0.2s ease;
}

::-webkit-scrollbar-thumb:hover {
  background: hsl(0, 0%, 20%);
}

::-webkit-scrollbar-corner {
  background: transparent;
}

/* Firefox scrollbars */
* {
  scrollbar-width: thin;
  scrollbar-color: hsl(0, 0%, 30%) rgba(0, 0, 0, 0.1);
}

/* Ensure main content scrollbar doesn't overlap with bottom navigation */
main {
  scrollbar-gutter: stable;
  max-height: calc(100vh - 152px); /* Header height (64px) + bottom nav (80px) + extra margin (8px) */
}

.dark {
  --background: hsl(240, 10%, 3.9%);
  --foreground: hsl(0, 0%, 98%);
  --muted: hsl(240, 3.7%, 15.9%);
  --muted-foreground: hsl(240, 5%, 64.9%);
  --popover: hsl(240, 10%, 3.9%);
  --popover-foreground: hsl(0, 0%, 98%);
  --card: hsl(240, 10%, 3.9%);
  --card-foreground: hsl(0, 0%, 98%);
  --border: hsl(240, 3.7%, 15.9%);
  --input: hsl(240, 3.7%, 15.9%);
  --primary: hsl(205, 35%, 54%);
  --primary-foreground: hsl(211, 100%, 99%);
  --secondary: hsl(240, 3.7%, 15.9%);
  --secondary-foreground: hsl(0, 0%, 98%);
  --accent: hsl(240, 3.7%, 15.9%);
  --accent-foreground: hsl(0, 0%, 98%);
  --destructive: hsl(0, 62.8%, 30.6%);
  --destructive-foreground: hsl(0, 0%, 98%);
  --ring: hsl(240, 4.9%, 83.9%);
  --radius: 0.5rem;
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased;
    font-family: 'Roboto', system-ui, -apple-system, sans-serif;
    background-color: #5E93B5;
    color: white;
  }
}

@layer utilities {
  .text-on-surface {
    color: var(--on-surface);
  }
  
  .text-on-background {
    color: white;
  }
  
  .card-text {
    color: hsl(0, 0%, 15%) !important;
  }
  
  /* Force dark text in cards - using actual component class names */
  [data-component="card"] h1, [data-component="card"] h2, [data-component="card"] h3, 
  [data-component="card"] h4, [data-component="card"] h5, [data-component="card"] h6,
  [data-component="card"] .font-medium, [data-component="card"] .text-lg, [data-component="card"] .text-xl {
    color: hsl(0, 0%, 10%) !important;
  }
  
  [data-component="card"] p, [data-component="card"] div, [data-component="card"] span {
    color: hsl(0, 0%, 20%) !important;
  }
  
  /* Target shadcn card components specifically */
  .bg-card h1, .bg-card h2, .bg-card h3, .bg-card h4, .bg-card h5, .bg-card h6,
  .bg-card .font-medium, .bg-card .text-lg, .bg-card .text-xl {
    color: hsl(0, 0%, 10%) !important;
  }
  
  .bg-card .text-on-surface {
    color: hsl(0, 0%, 10%) !important;
  }
  
  /* Force text-card-foreground to use dark color */
  .text-card-foreground {
    color: hsl(0, 0%, 10%) !important;
  }
  
  /* Override any white text in cards */
  .bg-card * {
    color: hsl(0, 0%, 15%) !important;
  }
  
  /* But preserve button and badge colors */
  .bg-card .bg-primary, .bg-card .bg-green-600, .bg-card .bg-red-600, 
  .bg-card .bg-gray-600, .bg-card .bg-gray-700, .bg-card .bg-secondary, .bg-card .bg-destructive,
  .bg-primary, .bg-green-600, .bg-red-600, .bg-gray-600, .bg-gray-700, .bg-destructive {
    color: white !important;
  }
  
  /* Make sure icons in dark buttons are white and fix hover states */
  .bg-primary svg, .bg-green-600 svg, .bg-red-600 svg, 
  .bg-gray-600 svg, .bg-gray-700 svg, .bg-destructive svg,
  .bg-card .bg-primary svg, .bg-card .bg-green-600 svg, .bg-card .bg-red-600 svg,
  .bg-card .bg-gray-600 svg, .bg-card .bg-gray-700 svg, .bg-card .bg-destructive svg {
    color: white !important;
    fill: white !important;
    stroke: white !important;
  }

  /* Fix icon colors and hover states */
  button svg {
    stroke-width: 2 !important;
    transition: all 0.2s ease !important;
  }

  /* Default button icon colors */
  button .lucide {
    stroke: currentColor !important;
    stroke-width: 2 !important;
  }

  /* Dark button icon colors (normal state) */
  .bg-primary svg, .bg-green-600 svg, .bg-red-600 svg, 
  .bg-gray-600 svg, .bg-gray-700 svg, .bg-destructive svg {
    stroke: white !important;
    fill: none !important;
  }

  /* Light button icon colors (normal state) */
  .bg-white svg, .bg-gray-100 svg, .bg-gray-200 svg {
    stroke: #374151 !important;
    fill: none !important;
  }

  /* Dark button hover states - icons become lighter/more visible */
  .bg-primary:hover svg, .bg-green-600:hover svg, .bg-red-600:hover svg,
  .bg-gray-600:hover svg, .bg-gray-700:hover svg, .bg-destructive:hover svg {
    stroke: #f3f4f6 !important;
    opacity: 1 !important;
  }

  /* Light button hover states - icons become darker */
  .bg-white:hover svg, .bg-gray-100:hover svg, .bg-gray-200:hover svg {
    stroke: #111827 !important;
    opacity: 1 !important;
  }

  /* Variant outline buttons */
  .border-gray-300 svg, [data-variant="outline"] svg {
    stroke: #6b7280 !important;
  }

  .border-gray-300:hover svg, [data-variant="outline"]:hover svg {
    stroke: #374151 !important;
  }
  
  /* Fix text in gray background sections like Initial Inspection heading */
  .bg-gray-50 .text-on-surface,
  .bg-gray-50 h1, .bg-gray-50 h2, .bg-gray-50 h3, .bg-gray-50 h4, .bg-gray-50 h5, .bg-gray-50 h6,
  .bg-gray-50 .font-semibold {
    color: hsl(0, 0%, 10%) !important;
  }
  
  .bg-gray-50 p, .bg-gray-50 span, .bg-gray-50 .text-gray-600 {
    color: hsl(0, 0%, 30%) !important;
  }
  
  /* Fix dialog text colors - more comprehensive targeting */
  .dialog-shadow h2, 
  .dialog-shadow .font-semibold,
  .dialog-shadow .text-lg,
  [data-state="open"] h2,
  [data-state="open"] .font-semibold,
  [data-radix-dialog-content] h2, 
  [data-radix-dialog-content] .font-semibold,
  [data-radix-dialog-content] .text-lg {
    color: hsl(0, 0%, 10%) !important;
  }
  
  .dialog-shadow p,
  .dialog-shadow .text-sm,
  .dialog-shadow .text-xs,
  .dialog-shadow .text-gray-600,
  .dialog-shadow .text-gray-500,
  [data-state="open"] p,
  [data-state="open"] .text-sm,
  [data-state="open"] .text-xs,
  [data-radix-dialog-content] p,
  [data-radix-dialog-content] .text-sm,
  [data-radix-dialog-content] .text-xs,
  [data-radix-dialog-content] .text-gray-600,
  [data-radix-dialog-content] .text-gray-500 {
    color: hsl(0, 0%, 25%) !important;
  }
  
  .dialog-shadow label,
  [data-state="open"] label,
  [data-radix-dialog-content] label {
    color: hsl(0, 0%, 15%) !important;
  }
  
  /* Additional targeting for DialogHeader and DialogTitle */
  [role="dialog"] h2,
  [role="dialog"] .font-semibold,
  [role="dialog"] header h2,
  [data-radix-dialog-title],
  .bg-background h2,
  .bg-background .text-lg,
  .bg-background .font-semibold {
    color: hsl(0, 0%, 10%) !important;
  }
  
  /* Force all dialog content to have dark text */
  .bg-background * {
    color: hsl(0, 0%, 15%) !important;
  }
  
  /* But preserve button colors in backgrounds */
  .bg-background .bg-primary, .bg-background .bg-green-600, .bg-background .bg-red-600, 
  .bg-background .bg-gray-600, .bg-background .bg-gray-700, .bg-background .bg-destructive {
    color: white !important;
  }
  
  /* Drop shadows for forms and cards */
  .card-shadow {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }
  
  .form-shadow {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }
  
  .dialog-shadow {
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  }
  
  .bg-surface {
    background-color: var(--surface);
  }
  
  .text-error {
    color: var(--error);
  }
  
  .bg-primary-dark {
    background-color: hsl(205, 35%, 48%);
  }
  
  .hover\:bg-primary-dark:hover {
    background-color: hsl(205, 35%, 48%);
  }
}
